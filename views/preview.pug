extend _basepage.pug

block link
  link(rel="stylesheet" href=`/css/themes/${theme}/theme.css`)
  link(rel="stylesheet" href=`/css/themes/${theme}/colpreview.css`)
  link(rel="stylesheet" href="/css/layout.css")
  link(rel="stylesheet" href="/css/preview.css")

mixin tabpane(id)
  if id === defaultTab
    .tab-pane.active(id=`page-${id}`)
      block
  else
    .tab-pane(id=`page-${id}`)
      block

block content
  .row
    .col-md-3#preview-sidebar
      ul.nav.nav-pills.flex-column
        each title, id in tabs
          li.nav-item
            if id === defaultTab
              button.nav-link.active(data-bs-toggle="tab" data-bs-target=`#page-${id}`)= title
            else
              button.nav-link(data-bs-toggle="tab" data-bs-target=`#page-${id}`)= title
    
    svg(xmlns="http://www.w3.org/2000/svg" style="display: none;")
      symbol#check-circle-fill(fill="currentColor" viewbox="0 0 16 16")
        path(d="M16 8A8 8 0 1 1 0 8a8 8 0 0 1 16 0zm-3.97-3.03a.75.75 0 0 0-1.08.022L7.477 9.417 5.384 7.323a.75.75 0 0 0-1.06 1.06L6.97 11.03a.75.75 0 0 0 1.079-.02l3.992-4.99a.75.75 0 0 0-.01-1.05z")
      symbol#info-fill(fill="currentColor" viewbox="0 0 16 16")
        path(d="M8 16A8 8 0 1 0 8 0a8 8 0 0 0 0 16zm.93-9.412-1 4.705c-.07.34.029.533.304.533.194 0 .487-.07.686-.246l-.088.416c-.287.346-.92.598-1.465.598-.703 0-1.002-.422-.808-1.319l.738-3.468c.064-.293.006-.399-.287-.47l-.451-.081.082-.381 2.29-.287zM8 5.5a1 1 0 1 1 0-2 1 1 0 0 1 0 2z")
      symbol#exclamation-triangle-fill(fill="currentColor" viewbox="0 0 16 16")
        path(d="M8.982 1.566a1.13 1.13 0 0 0-1.96 0L.165 13.233c-.457.778.091 1.767.98 1.767h13.713c.889 0 1.438-.99.98-1.767L8.982 1.566zM8 5c.535 0 .954.462.9.995l-.35 3.507a.552.552 0 0 1-1.1 0L7.1 5.995A.905.905 0 0 1 8 5zm.002 6a1 1 0 1 1 0 2 1 1 0 0 1 0-2z")

    .col-12.col-md.mt-4.mt-md-0.tab-content

      h1= themeName
      hr

      +tabpane("typography")

      +tabpane("colors")

        <h2>Main colors</h2>
        <p>These are the base colors:</p>

        <div class="row">
          <div class="col-md-4">
            <div class="p-3 mb-3 bg-primary">Primary</div>
          </div>
          <div class="col-md-4">
            <div class="p-3 mb-3 bg-secondary">Secondary</div>
          </div>
          <div class="col-md-4">
            <div class="p-3 mb-3 bg-success text-white">Success</div>
          </div>
          <div class="col-md-4">
            <div class="p-3 mb-3 bg-danger text-white">Danger</div>
          </div>
          <div class="col-md-4">
            <div class="p-3 mb-3 bg-warning">Warning</div>
          </div>
          <div class="col-md-4">
            <div class="p-3 mb-3 bg-info text-white">Info</div>
          </div>
          <div class="col-md-4">
            <div class="p-3 mb-3 bg-light">Light</div>
          </div>
          <div class="col-md-4">
            <div class="p-3 mb-3 bg-dark text-white">Dark</div>
          </div>
        </div>

        <h2>All colors</h2>
        <p>Here is the full color pallette:</p>
        .row
          each color in themeColors
            .col-md-4.mb-3
              .p-3.mb-2(class=`preview-${color}-500`)
              
                if color === "gray"
                  strong.d-block $gray-500
                else
                  strong.d-block $#{color}

                span(class=`preview-hex-${color}-500`)

              each number in [100, 200, 300, 400, 500, 600, 700, 800, 900]
                .p-3(class=`preview-${color}-${number}`) $#{color}-#{number}
          
          .col-md-4.mb-3
            .p-3.mb-2.preview-black
              strong.d-block $black
              span(class="preview-hex-black")
            .p-3.mb-2.preview-white.border
              strong.d-block $white
              span(class="preview-hex-white")

      +tabpane("accordion")

        <h2>Accordion</h2>
        <div class="accordion" id="accordionExample">
          <div class="accordion-item">
            <h3 class="accordion-header" id="headingOne">
              <button class="accordion-button" type="button" data-bs-toggle="collapse" data-bs-target="#collapseOne" aria-expanded="true" aria-controls="collapseOne">
                Accordion Item #1
              </button>
            </h3>
            <div id="collapseOne" class="accordion-collapse collapse show" aria-labelledby="headingOne" data-bs-parent="#accordionExample">
              <div class="accordion-body">
                <strong>This is the first item's accordion body.</strong> It is shown by default, until the collapse plugin adds the appropriate classes that we use to style each element. These classes control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the <code>.accordion-body</code>, though the transition does limit overflow.
              </div>
            </div>
          </div>
          <div class="accordion-item">
            <h3 class="accordion-header" id="headingTwo">
              <button class="accordion-button collapsed" type="button" data-bs-toggle="collapse" data-bs-target="#collapseTwo" aria-expanded="false" aria-controls="collapseTwo">
                Accordion Item #2
              </button>
            </h3>
            <div id="collapseTwo" class="accordion-collapse collapse" aria-labelledby="headingTwo" data-bs-parent="#accordionExample">
              <div class="accordion-body">
                <strong>This is the second item's accordion body.</strong> It is hidden by default, until the collapse plugin adds the appropriate classes that we use to style each element. These classes control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the <code>.accordion-body</code>, though the transition does limit overflow.
              </div>
            </div>
          </div>
          <div class="accordion-item">
            <h3 class="accordion-header" id="headingThree">
              <button class="accordion-button collapsed" type="button" data-bs-toggle="collapse" data-bs-target="#collapseThree" aria-expanded="false" aria-controls="collapseThree">
                Accordion Item #3
              </button>
            </h3>
            <div id="collapseThree" class="accordion-collapse collapse" aria-labelledby="headingThree" data-bs-parent="#accordionExample">
              <div class="accordion-body">
                <strong>This is the third item's accordion body.</strong> It is hidden by default, until the collapse plugin adds the appropriate classes that we use to style each element. These classes control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the <code>.accordion-body</code>, though the transition does limit overflow.
              </div>
            </div>
          </div>
        </div>

      +tabpane("alerts")

        <h2>Alerts</h2>
        each variant in colorVariants
          <div class="alert alert-#{variant}" role="alert">
            | A simple #{variant} alert with <a class="alert-link" href="#">an example link</a>. Give it a click if you like.
          </div>

        <h2>Alerts with icons</h2>
        <div class="alert alert-success" role="alert">
          <svg class="flex-shrink-0 me-2 mb-2 float-start" width="24" height="24" role="img" aria-label="Success:">
            <use xlink:href="#check-circle-fill"></use>
          </svg>
          <h4 class="alert-heading">Well done!</h4>
          <p>Aww yeah, you successfully read this important alert message. This example text is going to run a bit longer so that you can see how spacing within an alert works with this kind of content.</p>
          <hr />
          <p class="mb-0">Whenever you need to, be sure to use margin utilities to keep things nice and tidy.</p>
        </div>
        
        <div class="alert alert-primary d-flex align-items-center" role="alert">
          <svg class="flex-shrink-0 me-2" width="24" height="24" role="img" aria-label="Info:">
            <use xlink:href="#info-fill"></use>
          </svg>
          <div>An example alert with an icon</div>
        </div>

        <div class="alert alert-success d-flex align-items-center" role="alert">
          <svg class="flex-shrink-0 me-2" width="24" height="24" role="img" aria-label="Success:">
            <use xlink:href="#check-circle-fill"></use>
          </svg>
          <div>An example success alert with an icon</div>
        </div>

        <div class="alert alert-warning d-flex align-items-center" role="alert">
          <svg class="flex-shrink-0 me-2" width="24" height="24" role="img" aria-label="Warning:">
            <use xlink:href="#exclamation-triangle-fill"></use>
          </svg>
          <div>An example warning alert with an icon</div>
        </div>

        <div class="alert alert-danger d-flex align-items-center" role="alert">
          <svg class="flex-shrink-0 me-2" width="24" height="24" role="img" aria-label="Danger:">
            <use xlink:href="#exclamation-triangle-fill"></use>
          </svg>
          <div>An example danger alert with an icon</div>
        </div>

        <h2>Dismissible alert</h2>

        <div class="alert alert-warning alert-dismissible fade show" role="alert">
          <strong>Holy guacamole!</strong> You should check in on some of those fields below.
          <button class="btn-close" type="button" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>

      +tabpane("badge")

        <h2>Rectangular badges</h2>
        <p>
          <span class="badge bg-primary text-dark">Primary</span>
          <span class="badge bg-secondary text-dark">Secondary</span>
          <span class="badge bg-success">Success</span>
          <span class="badge bg-danger">Danger</span>
          <span class="badge bg-warning text-dark">Warning</span>
          <span class="badge bg-info">Info</span>
          <span class="badge bg-light text-dark">Light</span>
          <span class="badge bg-dark">Dark</span>
        </p>
        
        <h2>Rounded badges</h2>
        <p>
          <span class="badge rounded-pill bg-primary text-dark">Primary</span>
          <span class="badge rounded-pill bg-secondary text-dark">Secondary</span>
          <span class="badge rounded-pill bg-success">Success</span>
          <span class="badge rounded-pill bg-danger">Danger</span>
          <span class="badge rounded-pill bg-warning text-dark">Warning</span>
          <span class="badge rounded-pill bg-info">Info</span>
          <span class="badge rounded-pill bg-light text-dark">Light</span>
          <span class="badge rounded-pill bg-dark">Dark</span>
        </p>

        <h2>Badges with buttons</h2>

        <button type="button" class="btn btn-primary">
          | Notifications <span class="badge bg-danger">4</span>
        </button>

        <button type="button" class="btn btn-primary position-relative me-4">
          | Inbox
          <span class="position-absolute top-0 start-100 translate-middle badge rounded-pill bg-danger">
            | 99+ <span class="visually-hidden">unread messages</span>
          </span>
        </button>
        
        <button type="button" class="btn btn-primary position-relative">
          | Profile
          <span class="position-absolute top-0 start-100 translate-middle p-2 bg-danger rounded-circle">
            <span class="visually-hidden">New alerts</span>
          </span>
        </button>

      +tabpane("breadcrumb")

      +tabpane("buttons")

      +tabpane("card")

      +tabpane("carousel")

      +tabpane("close-button")

      +tabpane("collapse")

      +tabpane("dropdowns")

      +tabpane("listgroup")

      +tabpane("modal")

      +tabpane("nav-tab")

      +tabpane("navbar")

      +tabpane("offcanvas")

      +tabpane("pagination")

      +tabpane("popovers")

      +tabpane("progress")

      +tabpane("spinners")

      +tabpane("toasts")

      +tabpane("tooltips")
