extend _basepage.pug

block link
  link(rel="stylesheet" href=`/css/themes/${theme}/theme.css`)
  link(rel="stylesheet" href=`/css/themes/${theme}/colpreview.css`)
  link(rel="stylesheet" href="/css/layout.css")
  link(rel="stylesheet" href="/css/preview.css")

mixin tabpane(id)
  if id === defaultTab
    .tab-pane.active(id=`page-${id}`)
      block
  else
    .tab-pane(id=`page-${id}`)
      block

block content
  .row
    .col-md-3#preview-sidebar
      ul.nav.nav-pills.flex-column
        each title, id in tabs
          li.nav-item
            if id === defaultTab
              button.nav-link.active(data-bs-toggle="tab" data-bs-target=`#page-${id}`)= title
            else
              button.nav-link(data-bs-toggle="tab" data-bs-target=`#page-${id}`)= title
    
    svg(xmlns="http://www.w3.org/2000/svg" style="display: none;")
      symbol#check-circle-fill(fill="currentColor" viewbox="0 0 16 16")
        path(d="M16 8A8 8 0 1 1 0 8a8 8 0 0 1 16 0zm-3.97-3.03a.75.75 0 0 0-1.08.022L7.477 9.417 5.384 7.323a.75.75 0 0 0-1.06 1.06L6.97 11.03a.75.75 0 0 0 1.079-.02l3.992-4.99a.75.75 0 0 0-.01-1.05z")
      symbol#info-fill(fill="currentColor" viewbox="0 0 16 16")
        path(d="M8 16A8 8 0 1 0 8 0a8 8 0 0 0 0 16zm.93-9.412-1 4.705c-.07.34.029.533.304.533.194 0 .487-.07.686-.246l-.088.416c-.287.346-.92.598-1.465.598-.703 0-1.002-.422-.808-1.319l.738-3.468c.064-.293.006-.399-.287-.47l-.451-.081.082-.381 2.29-.287zM8 5.5a1 1 0 1 1 0-2 1 1 0 0 1 0 2z")
      symbol#exclamation-triangle-fill(fill="currentColor" viewbox="0 0 16 16")
        path(d="M8.982 1.566a1.13 1.13 0 0 0-1.96 0L.165 13.233c-.457.778.091 1.767.98 1.767h13.713c.889 0 1.438-.99.98-1.767L8.982 1.566zM8 5c.535 0 .954.462.9.995l-.35 3.507a.552.552 0 0 1-1.1 0L7.1 5.995A.905.905 0 0 1 8 5zm.002 6a1 1 0 1 1 0 2 1 1 0 0 1 0-2z")

    .col-12.col-md.mt-4.mt-md-0.tab-content

      h1= themeName
      hr

      +tabpane("typography")

      +tabpane("colors")

        h2 Main colors
        p These are the base colors:

        .row
          .col-md-4
            .p-3.mb-3.bg-primary.text-black Primary
          .col-md-4
            .p-3.mb-3.bg-secondary.text-black Secondary
          .col-md-4
            .p-3.mb-3.bg-success.text-black Success
          .col-md-4
            .p-3.mb-3.bg-danger.text-black Danger
          .col-md-4
            .p-3.mb-3.bg-warning.text-black Warning
          .col-md-4
            .p-3.mb-3.bg-info.text-white Info
          .col-md-4
            .p-3.mb-3.bg-light.text-black Light
          .col-md-4
            .p-3.mb-3.bg-dark.text-white Dark

        h2 All colors
        p Here is the full color pallette:
        .row
          each color in themeColors
            .col-md-4.mb-3
              .p-3.mb-2(class=`preview-${color}-500`)
              
                if color === "gray"
                  strong.d-block $gray-500
                else
                  strong.d-block $#{color}

                span(class=`preview-hex-${color}-500`)

              each number in [100, 200, 300, 400, 500, 600, 700, 800, 900]
                .p-3(class=`preview-${color}-${number}`) $#{color}-#{number}
          
          .col-md-4.mb-3
            .p-3.mb-2.preview-black
              strong.d-block $black
              span(class="preview-hex-black")
            .p-3.mb-2.preview-white.border
              strong.d-block $white
              span(class="preview-hex-white")

      +tabpane("accordion")
        .accordion
          .accordion-item
            h2.accordion-header
              button.accordion-button(type="button" data-bs-toggle="collapse" data-bs-target="#preview-accordion-collapse1" aria-expanded="true" aria-controls="preview-accordion-collapse1")
                | Accordion Item #1
            #preview-accordion-collapse1.accordion-collapse.collapse.show
              .accordion-body
                strong This is the first item&apos;s accordion body.
                |  It is shown by default, until the collapse plugin adds the appropriate classes that we use to style each element. These classes control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It&apos;s also worth noting that just about any HTML can go within the 
                code .accordion-body
                | , though the transition does limit overflow.
            .accordion-item
            h2.accordion-header
              button.accordion-button.collapsed(type="button" data-bs-toggle="collapse" data-bs-target="#preview-accordion-collapse2" aria-expanded="false" aria-controls="preview-accordion-collapse2")
                | Accordion Item #2
            #preview-accordion-collapse2.accordion-collapse.collapse
              .accordion-body
                strong This is the second item&apos;s accordion body.
                |  It is hidden by default, until the collapse plugin adds the appropriate classes that we use to style each element. These classes control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It&apos;s also worth noting that just about any HTML can go within the 
                code .accordion-body
                | , though the transition does limit overflow.
            .accordion-item
            h2.accordion-header
              button.accordion-button.collapsed(type="button" data-bs-toggle="collapse" data-bs-target="#preview-accordion-collapse3" aria-expanded="false" aria-controls="preview-accordion-collapse3")
                | Accordion Item #3
            #preview-accordion-collapse3.accordion-collapse.collapse
              .accordion-body
                strong This is the third item&apos;s accordion body.
                |  It is hidden by default, until the collapse plugin adds the appropriate classes that we use to style each element. These classes control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It&apos;s also worth noting that just about any HTML can go within the 
                code .accordion-body
                | , though the transition does limit overflow.

      +tabpane("alerts")

        .alert(role="alert")
          | An alert with no color and 
          a.alert-link(href="#") an example link
          | . Give it a click if you like.

        each variant in ["primary", "secondary", "success", "danger", "warning", "info", "light", "dark"]
          .alert(class=`alert-${variant}` role="alert")
            | A simple #{variant} alert with 
            a.alert-link(href="#") an example link
            | . Give it a click if you like.

        .alert.alert-success(role="alert")
          svg.flex-shrink-0.me-2.mb-2.float-start(width="24" height="24" role="img" aria-label="Success:")
            use(xlink:href="#check-circle-fill")
          h4.alert-heading Well done!
          p
            | Aww yeah, you successfully read this important alert message. This example text
            | is going to run a bit longer so that you can see how spacing within an alert works
            | with this kind of content.
          hr
          p.mb-0 Whenever you need to, be sure to use margin utilities to keep things nice and tidy.

        .alert.alert-primary.d-flex.align-items-center(role="alert")
          svg.flex-shrink-0.me-2(width="24" height="24" role="img" aria-label="Info:")
            use(xlink:href="#info-fill")
          div
            | An example alert with an icon
        .alert.alert-success.d-flex.align-items-center(role="alert")
          svg.flex-shrink-0.me-2(width="24" height="24" role="img" aria-label="Success:")
            use(xlink:href="#check-circle-fill")
          div
            | An example success alert with an icon
        .alert.alert-warning.d-flex.align-items-center(role="alert")
          svg.flex-shrink-0.me-2(width="24" height="24" role="img" aria-label="Warning:")
            use(xlink:href="#exclamation-triangle-fill")
          div
            | An example warning alert with an icon
        .alert.alert-danger.d-flex.align-items-center(role="alert")
          svg.flex-shrink-0.me-2(width="24" height="24" role="img" aria-label="Danger:")
            use(xlink:href="#exclamation-triangle-fill")
          div
            | An example danger alert with an icon
        .alert.alert-warning.alert-dismissible.fade.show(role="alert")
          strong Holy guacamole!
          |  You should check in on some of those fields below.
          button.btn-close(type="button" data-bs-dismiss="alert" aria-label="Close")

      +tabpane("badge")

      +tabpane("breadcrumb")

      +tabpane("buttons")

      +tabpane("card")

      +tabpane("carousel")

      +tabpane("close-button")

      +tabpane("collapse")

      +tabpane("dropdowns")

      +tabpane("listgroup")

      +tabpane("modal")

      +tabpane("nav-tab")

      +tabpane("navbar")

      +tabpane("offcanvas")

      +tabpane("pagination")

      +tabpane("popovers")

      +tabpane("progress")

      +tabpane("spinners")

      +tabpane("toasts")

      +tabpane("tooltips")
